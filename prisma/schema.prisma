// Generate Prisma client
generator client {
  provider = "prisma-client-js"
}
// Database source
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Database models
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role?     @default(user)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  accounts      Account[]
}

model PasswordResetToke {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Products {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String @unique
  price       Int    @default(0)
  sizeId      String @db.ObjectId
  categoryId  String @db.ObjectId
  description String
  images      String

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  size     Sizes    @relation(fields: [sizeId], references: [id], onDelete: Cascade)
}

model ImagesGallery {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  src    String
  width  Int
  height Int
  alt    String
}

model Category {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  icon        String?
  description String     @default("")
  products    Products[]
}

model Sizes {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  width    String
  height   String
  type     String
  products Products[]
}

enum Role {
  user
  admin
}
