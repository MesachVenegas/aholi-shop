// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id String @id @default(cuid())
  userId String
  providerType String
  providerId String
  providerAccountId String
  refreshToken String?
  accessToken String?
  accessTokenExpires DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
}

model Session {
  id String @id @default(cuid())
  userId String
  expires DateTime
  sessionToken String @unique
  accessToken String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
}
model User {
  id String @id @default(cuid())
  image String?
  name String
  email String @unique
  password String
  validate Boolean @default(false)
  accounts Account[]
  sessions Session[]
}

model VerificationRequest {
  id String @id @default(cuid())
  indentifier String
  token String @unique
  expires DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([indentifier, token])
}

model Products {
  id String @id @default(cuid())
  name String @unique
  price Int @default(0)
  sizeId Int
  categoryId Int
  description String
  images Json
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  size Sizes @relation(fields: [sizeId], references: [id], onDelete: Cascade)
}

model ImagesGallery {
  id Int @id @default(autoincrement())
  src String
  width Int
  height Int
  alt String
}

model Category {
  id Int @id @default(autoincrement())
  name String
  icon String
  products Products[]
}

model Sizes {
  id Int @id @default(autoincrement())
  name String
  width String
  height String
  type String
  products Products[]
}
