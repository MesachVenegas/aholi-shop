// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  password        String?
  role            Role?     @default(user)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  accounts        Account[]
}

model PasswordResetToke {
  id      String    @id @default(cuid())
  email   String
  token   String    @unique
  expires DateTime

  @@unique([email, token])
}

model VerificationToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expires   DateTime

  @@unique([email, token])
}

model Products {
  id            String      @id @default(cuid())
  name          String      @unique
  price         Int         @default(0)
  sizeId        Int
  categoryId    Int
  description   String
  images        String

  category  Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  size      Sizes     @relation(fields: [sizeId], references: [id], onDelete: Cascade)
}

model ImagesGallery {
  id        Int     @id @default(autoincrement())
  src       String
  width     Int
  height    Int
  alt       String
}

model Category {
  id            Int         @id @default(autoincrement())
  name          String
  icon          String?
  description   String      @default("")
  products      Products[]
}

model Sizes {
  id          Int @id @default(autoincrement())
  name        String
  width       String
  height      String
  type        String
  products    Products[]
}

enum Role {
  user
  admin
}
